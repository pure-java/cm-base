#set( $entityLow = $entity.substring(0,1).toLowerCase()+$entity.substring(1) )
#set( $lineThrough = $MyVelocityTemplateEngine.split($entity))
import {Component, EventEmitter, OnInit, Output} from '@angular/core';
import {${entity}} from 'add.ts${package.ModuleName}/${lineThrough}.entity';

import {NzMessageService, NzModalService} from 'ng-zorro-antd';
import {FormBuilder, FormGroup} from '@angular/forms';
import * as _ from 'lodash';
import {ResultMessage} from '@entry/common/base/result-message';
import {NzFormConfig} from "@entry/common/form/nz-form-config";
import {NzModalConfig} from "@entry/common/nz-modal-config";
import {ObjectUtil} from '@lib/common/ObjectUtil';
import {${entity}Service} from 'add.ts${package.ModuleName}/${lineThrough}.service';


/**
 * 添加 $!{table.comment} 组件
 * @author ${author}
 * @since ${date}
 **/
@Component({
  selector: 'app-${lineThrough}-add',
  templateUrl: './${lineThrough}-add.component.html',
  styleUrls: ['./${lineThrough}-add.component.css']
})
export class ${entity}AddComponent implements OnInit {

  // 传递添加或修改是否成功
  @Output() modify${entity}Status = new EventEmitter<boolean>();

  // 表单组
        ${entityLow}FormGroup: FormGroup;

  // 添加或修改表单属性
  curr${entity}Form: NzFormConfig = new NzFormConfig().setFormControlSpan(14).setFormLabelSpan(6).setLayout("horizontal");

  // 添加或修改对话框
  operation${entity}Modal: NzModalConfig = NzModalConfig.newInstance().setNzTitle('请修改添加模态框标题');


  constructor(private ${entityLow}Service: ${entity}Service,
              private formBuilder: FormBuilder,
              private modalService: NzModalService,
              private message: NzMessageService) {
  }

  // 初始化 构建表单，并添加验证信息
  ngOnInit() {
    let validator = {};
    // merge合并对象
    this.${entityLow}FormGroup = this.formBuilder.group(_.merge(new ${entity}(), validator));
  }

  // 打开添加或修改窗口
  openModify${entity}Window(operation${entity}?: ${entity}) {
    this.${entityLow}FormGroup.reset({sex: 0});
    if (ObjectUtil.isNotNil(operation${entity}) && ObjectUtil.isNotNil(operation${entity}.oid)) {
      this.operation${entity}Modal.setNzTitle('请修改修改模态框名称');
      this.${entityLow}FormGroup.patchValue(operation${entity});
    } else if (ObjectUtil.isNil(operation${entity})) {
      this.operation${entity}Modal.setNzTitle('请修改添加模态框名称');
    } else {
      this.message.error("修改失败");
    }
    this.operation${entity}Modal.openModal();
  }

  // 确认添加按钮
  modifyModel${entity}Ok(): void {
    if (ObjectUtil.formValidity(this.${entityLow}FormGroup)) {
      let ${entityLow}FormObj = this.${entityLow}FormGroup.getRawValue() as ${entity};

      this.operation${entity}Modal.setNzOkLoading(true);
      let observable = this.${entityLow}Service.modify${entity}(${entityLow}FormObj);
      observable.subscribe((data: ResultMessage<any>) => {
        if (data.status) {
          this.modify${entity}Status.emit(true);
          this.operation${entity}Modal.closeModal();
        }
        this.operation${entity}Modal.setNzOkLoading(false);
      });
    }
  }

  // 删除用户 ==================
  // 打开删除窗口
  openDel${entity}(${entityLow}: ${entity}): void {
    let deleteId = ${entityLow}.
    oid;
    this.modalService.confirm({
      nzTitle: '<i>删除 $!{table.comment}</i>',
      nzContent: `<b>确定删除 $!{table.comment}么？</b>`,
      nzOnOk: () => {
        this.${entityLow}Service.delete${entity}(deleteId + "").subscribe(data => {
          this.modify${entity}Status.emit(true);
        });
      }
    });
  }

}
